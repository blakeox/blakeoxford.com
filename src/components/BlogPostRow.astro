---
// BlogPostRow.astro
const { post, align = 'left' } = Astro.props as {
  post: any;
  align?: 'left' | 'right';
};
const { slug, data } = post;
---
<section class={`flex flex-col md:flex-row items-center w-full gap-8 md:gap-16 ${align === 'right' ? 'md:flex-row-reverse' : ''}`} style="min-height:340px;">
  <div class="flex flex-col flex-1 px-4 md:px-6 lg:px-12 py-4 gap-4 w-full min-w-0">
    <h2 class="text-3xl font-extrabold text-accent-dark dark:text-accent-light leading-tight mb-2">
      <a href={`/blog/${slug}/`} class="hover:underline focus:outline-none focus-visible:ring-2 focus-visible:ring-accent">
        {data.title}
      </a>
    </h2>
    {data.pubDate && (
      <time class="text-xs text-gray-500 dark:text-gray-400 mb-1" datetime={new Date(data.pubDate).toISOString()}>
        {new Date(data.pubDate).toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' })}
      </time>
    )}
    {data.tags && Array.isArray(data.tags) && data.tags.length > 0 && (
      <ul class="flex flex-wrap gap-2 mb-1" aria-label="Post tags">
        {data.tags.map((tag: string) => (
          <li>
            <span class="bg-accent-light/40 text-accent-dark text-xs font-medium px-2 py-0.5 rounded-full">{tag}</span>
          </li>
        ))}
      </ul>
    )}
    {data.description && (
      <p class="text-gray-700 dark:text-gray-300 mb-4 line-clamp-4">
        {data.description.length > 220 ? `${data.description.slice(0, 217)}...` : data.description}
      </p>
    )}
    <div class="mt-auto flex justify-start">
      <a
        href={`/blog/${slug}/`}
        class="c-btn bg-accent text-background font-semibold px-5 py-2 rounded-lg shadow hover:bg-accent-dark transition-all duration-200 text-base focus:outline-none focus-visible:ring-2 focus-visible:ring-accent"
        aria-label="Read More"
      >
        Read More
      </a>
    </div>
  </div>
</section>
